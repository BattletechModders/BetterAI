{
  "behaviorVariables": [
    {
	    /* Influence Factor Weight for preferring moving less. */
      "k": "Float_PreferLowerMovementFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -1.0
      }
    },
    {
	    /* Influence Factor Weight for preferring moving less WHEN
	       SPRINTING. */
      "k": "Float_SprintPreferLowerMovementFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -1.0
      }
    },
    {
	    /* Influence Factor Weight to maximize expected damage to
	       hostiles.
	       Hostile Factor: 1.0 / 0.5 / 0.25 based on threat */
      "k": "Float_PreferHigherExpectedDamageToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
	    /* Influence Factor Weight to minimize expected damage
	       from hostiles. */
      "k": "Float_PreferLowerExpectedDamageFromHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.8
      }
    },
    {
	    /* Optimal distance to nearest ally. (See
	       PreferOptimalDistanceToAllyFactor.) */
      "k": "Float_OptimalAllyDistance",
      "v": {
        "type": "Float",
        "floatVal": 80
      }
    },
    {
            /* Optimal distance to nearest hostile. (See
               Float_PreferOptimalDistanceToHostileFactorWeight.) */
      "k": "Float_OptimalHostileDistance",
      "v": {
        "type": "Float",
       "floatVal": 300
      }
    },
    {
	    /* Influence Factor Weight to prefer locations close to
	       optimal distance to other allies. */
      "k": "Float_PreferOptimalDistanceToAllyFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 2.0
      }
    },
    {
            /* Influence Factor Weight to prefer locations close to
               optimal distance to other hostiles. */
      "k": "Float_PreferOptimalDistanceToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 1.75
      }
    },
    {
	    /* When considering different kinds of attacks, multiply
	       the shooting damage by this value to decide which
	       attack to use. */
      "k": "Float_ShootingDamageMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 2.0
      }
    },
    {
	    /* When considering different kinds of attacks, multiply
	       the melee damage by this value to decide which attack
	       to use. */
      "k": "Float_MeleeDamageMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 0.5
      }
    },
    {
	    /* Influence Factor Weight to control the desire to be
	       inside e.g. forests. */
      "k": "Float_PreferLessTargetableLocationFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.5
      }
    },
    {
	    /* If a target is a melee revenge target, what additional
	       damage multiplier to apply. The total multiplier is
	       Float_MeleeDamageMultiplier +
	       FloatMeleeRevengeBonus. */
      "k": "Float_MeleeRevengeBonus",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
	    /* A weight for an influence factor to prefer to get
	       inside melee range. Negative values will encourage
	       units to get out of melee range. */
      "k": "Float_PreferInsideMeleeRangeFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -1.0
      }
    },
    {
	    /* Influence Factor Weight to control the desire to be
	       inside forests or other locations that grant guard. */
      "k": "Float_PreferLocationsThatGrantGuardFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 1.5
      }
    },
    {
	    /* Appetitive Influence Factor Weight to approach
	       hostile's rear arc. */
      "k": "Float_AppetitivePreferApproachingRearArcOfHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
	    /* Appetitive Influence Factor Weight to approach
	       hostile's rear arc WHEN SPRINTING. */
      "k": "Float_SprintAppetitivePreferApproachingRearArcOfHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.0
      }
    },
    {
	    /* Appetitive Influence Factor Weight to approach ideal
	       weapon range to hostile. */
      "k": "Float_AppetitivePreferIdealWeaponRangeToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
	    /* Influence Factor to prefer this lance to surround hostile units.*/
      "k": "Float_PreferSurroundingHostileUnitsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
	    /* Influence Factor to prefer this lance to surround
	       hostile units WHEN SPRINTING.*/
      "k": "Float_SprintPreferSurroundingHostileUnitsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
	    /* Fence radius (in meters) for
	     * PreferStayInsideFenceFactor. */
      "k": "Float_FenceRadius",
      "v": {
        "type": "Float",
        "floatVal": 50
      }
    },
    {
	    /* Weight for an influence factor that seeks to stay
	       within ECM range of friendlies */
      "k": "Float_PreferFriendlyECMFields",
      "v": {
        "type": "Float",
        "floatVal": 1.5
      }
    },
    {
	    /* Weight for an influence factor that seeks to stay
	       within ECM range of friendlies WHEN SPRINTING */
      "k": "Float_SprintPreferFriendlyECMFields",
      "v": {
        "type": "Float",
        "floatVal": 0.5
      }
    },
    {
	    /* Weight for an influence factor that seeks to stay
	       within range of hostile ECM fields */
      "k": "Float_PreferHostileECMFields",
      "v": {
        "type": "Float",
        "floatVal": -0.5
      }
    },
    {
	    /* Weight for an influence factor that seeks to stay
	       within range of hostile ECM fields WHEN SPRINTING */
      "k": "Float_SprintPreferHostileECMFields",
      "v": {
        "type": "Float",
        "floatVal": -0.1
      }
    },
    {
	    /* Minimum number of stealth pips to allow for an ECM
		   ghosted mech to fire weapons */
      "k" : "Int_MinimumECMGhostedPipsToFire",
      "v" : {
        "type" : "Int",
        "intVal" : "2"
      }
    },
    {
	    /* Influence Factor Weight to prefer having LOS to
	       fewest hostiles. Useful for defensive moves. */
      "k": "Float_PreferLOSToFewestHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 1.75
      }
    },
    {
	    /* Influence Factor Weight to prefer having LOS to fewest
	       hostiles WHEN SPRINTING. Useful for defensive moves. */
      "k": "Float_SprintPreferLOSToFewestHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.2
      }
    }
  ]
}
