{
  "behaviorVariables": [
    {
      /* Maximum leg damage allowed for DFA attack (above which
         attacks will not be considered), as a fraction from 0.0
         (undamaged) to 1.0 (location destroyed) */
      "k": "Float_OwnMaxLegDamageForDFAAttack",
      "v": {
        "type": "Float",
        "floatVal": 0.75
      }
    },
    {
      /* Influence Factor Weight for preferring higher
         elevations. */
      "k": "Float_PreferHigherPositionFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* Influence Factor Weight to maximize expected damage to
         hostiles.
         Hostile Factor: 1.0 / 0.5 / 0.25 based on threat */
      "k": "Float_PreferHigherExpectedDamageToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 3
      }
    },
    {
      /* Optimal distance to nearest hostile. (See
         Float_PreferOptimalDistanceToHostileFactorWeight.) */
      "k": "Float_OptimalHostileDistance",
      "v": {
        "type": "Float",
        "floatVal": 24
      }
    },
    {
      /* Influence Factor Weight to prefer locations close to
         optimal distance to other allies. */
      "k": "Float_PreferOptimalDistanceToAllyFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* Boost provided to walk moves if the moving unit has the "Sure footing"
         ability. */
      "k": "Float_SureFootingAbilityWalkBoost",
      "v": {
        "type": "Float",
        "floatVal": 0.2
      }
    },
    {
      /* When considering different kinds of attacks, multiply
         the melee damage by this value to decide which attack
         to use. */
      "k": "Float_MeleeDamageMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 5
      }
    },
    {
      /* When considering different kinds of attacks, multiply
         the DFA damage by this value to decide which attack to
         use. */
      "k": "Float_DFADamageMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 12
      }
    },
    {
      /* Influence Factor Weight to control the desire to be
         inside water. */
      "k": "Float_PreferHigherHeatSinkLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* Influence Factor Weight to control the desire to be
         inside water WHEN SPRINTING. */
      "k": "Float_SprintPreferHigherHeatSinkLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* Influence Factor Weight to control the desire to be
         inside heat generating regions. */
      "k": "Float_PreferHigherHeatPerTurnLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.1
      }
    },
    {
      /* Influence Factor Weight to control the desire to be
         inside heat generating regions WHEN SPRINTING. */
      "k": "Float_SprintPreferHigherHeatPerTurnLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.1
      }
    },
    {
      /* If a target is a melee revenge target, what additional
         damage multiplier to apply. The total multiplier is
         Float_MeleeDamageMultiplier +
         FloatMeleeRevengeBonus. */
      "k": "Float_MeleeRevengeBonus",
      "v": {
        "type": "Float",
        "floatVal": 3
      }
    },
    {
      /* If a target is a melee revenge target, but the ratio of
         its expected melee damage to my expected melee damage
         is higher than this threshold, DO NOT MELEE! It'll all
         end in tears! */
      "k": "Float_MeleeDamageRatioCap",
      "v": {
        "type": "Float",
        "floatVal": 150
      }
    },
    {
      /* A weight for an influence factor to prefer to get
         inside melee range. Negative values will encourage
         units to get out of melee range. */
      "k": "Float_PreferInsideMeleeRangeFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 1.5
      }
    },
    {
      /* A weight for an influence factor to prefer to get
         inside melee range WHEN SPRINTING. Negative values will
         encourage units to get out of melee range. */
      "k": "Float_SprintPreferInsideMeleeRangeFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.75
      }
    },
    {
      /* If unsteady, the chance of just deciding to switch to
         defensive. */
      "k": "Float_UnsteadyCausesDefensiveMovePercentage",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* Whether the AI will reserve or not. */
      "k": "Bool_ReserveEnabled",
      "v": {
        "type": "Bool",
        "boolVal": false
      }
    },
    {
      /* Weight to prefer not being in locations that have
         lethal amounts of expected damage */
      "k": "Float_PreferNotLethalPositionFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* Weight to prefer sprinting to locations that do not
         have lethal amounts of expected damage */
      "k": "Float_SprintPreferNotLethalPositionFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* Radius (in meters) to avoid sprinting within. */
      "k": "Float_SprintExclusionRadius",
      "v": {
        "type": "Float",
        "floatVal": 1
      }
    },
    {
      /* Influence Factor Weight to be inside SprintExclusionRadius. */
      "k": "Float_PreferInsideSprintExclusionRadiusHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* Influence Factor Weight to be inside
         SprintExclusionRadius WHEN SPRINTING.  N.B. this should
         have NEGATIVE weights to discourage sprinting close to
         hostiles. */
      "k": "Float_SprintPreferInsideSprintExclusionRadiusHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* Influence Factor to prefer this lance to surround hostile units.*/
      "k": "Float_PreferSurroundingHostileUnitsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* Influence Factor to prefer not to be surrounded by hostile units.*/
      "k": "Float_PreferNotSurroundedByHostileUnitsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* Influence Factor to prefer not to be surrounded by
         hostile units WHEN SPRINTING.*/
      "k": "Float_SprintPreferNotSurroundedByHostileUnitsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* Sprint Hysteresis Multiplier value, the value
         multiplies the "sprint juice level" when a sprint move
         happens. Values can be between 0.0 and 1.0, with larger
         values (closer to 1.0) leaving more "sprint juice"
         around for next turn. */
      "k": "Float_SprintHysteresisMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 1
      }
    },
    {
      /* Weight for an influence factor that seeks to stay
         within a circular fence from the centerpoint of the
         lance. Note - negative logic; this should use negative
         numbers, as it's designed to discourage being outside
         the radius and have no effect inside the fence. */
      "k": "Float_PreferStayInsideFenceNegativeLogicFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.5
      }
    },
    {
      /* Weight for an influence factor that seeks to stay
         within a circular fence from the centerpoint of the
         lance WHEN SPRINTING. Note - negative logic; this
         should use negative numbers, as it's designed to
         discourage being outside the radius and have no effect
         inside the fence. */
      "k": "Float_SprintPreferStayInsideFenceNegativeLogicFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.1
      }
    },
    {
      /* Fence radius (in meters) for
         PreferStayInsideFenceFactor. */
      "k": "Float_FenceRadius",
      "v": {
        "type": "Float",
        "floatVal": 240
      }
    },
    {
      /* Description: Number of points of damage that a sensor
         locking turn needs to do over a straight up shooting
         turn before deciding to sensor lock. Positive is a
         shooting bias, negative is a sensor lock bias.*/
      "k": "Float_MinimumSensorLockQuality",
      "v": {
        "type": "Float",
        "floatVal": 30
      }
    },
    {
      /* Percentage (0-100+) that the unit's locally evaluated
         best target must exceed the designated target's
         expected damage when considering opportunity fire. */
      "k": "Float_OpportunityFireExceedsDesignatedTargetByPercentage",
      "v": {
        "type": "Float",
        "floatVal": 1
      }
    },
    {
      /* Percentage (0-100+) that the unit's locally evaluated
         best target must exceed the designated target's
         firepower takeaway when considering opportunity fire. */
      "k": "Float_OpportunityFireExceedsDesignatedTargetFirepowerTakeawayByPercentage",
      "v": {
        "type": "Float",
        "floatVal": 1
      }
    },
    {
      /* Multiplier applied when considering the value of a
         downed mech when calculating the centerpoint of the
         lance fence. 1.0 would be no special consideration, 2.0
         would make a downed mech as important as two other
         units. Values less than one would give the lance a
         tendency to abandon their wounded. */
      "k": "Float_DownedMechFenceContributionMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 1
      }
    },
    {
      /* Weight for how much to prefer to be exposed to enemy
         fire alone. Probably negative. */
      "k": "Float_AlonePreferenceWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.5
      }
    },
    {
      /* Weight for how much to prefer to be exposed to enemy
         fire alone WHEN SPRINTING. Probably negative. */
      "k": "Float_SprintAlonePreferenceWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.5
      }
    },
    {
      /* How long to tolerate being alone, in turns. */
      "k": "Int_AloneToleranceTurnCount",
      "v": {
        "type": "Int",
        "floatVal": 5
      }
    },
    {
      /*  When getting the chance in causing significant damage,
          how much weight to give the amount of structural damage caused. */
      "k": "Float_StructuralDamagePercentageMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 1.5
      }
    },
    {
      /* Influence Factor Weight for standing still when hostiles are in melee range. */
      "k": "Float_PreferStationaryWhenHostilesInMeleeRangeFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.1
      }
    }
  ]
}
