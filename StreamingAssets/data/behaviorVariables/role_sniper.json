{
  "behaviorVariables": [
    {
	    /* How much a location must be damaged before a DFA attack
	       will be considered , as a fraction from 0.0 (undamaged)
	       to 1.0 (location destroyed) */
      "k": "Float_ExistingTargetDamageForDFAAttack",
      "v": {
        "type": "Float",
        "floatVal": 0.01
      }
    },
    {
	    /* Influence Factor Weight for preferring moving less. */
      "k": "Float_PreferLowerMovementFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.8
      }
    },
    {
	    /* Influence Factor Weight for preferring higher
	       elevations. */
      "k": "Float_PreferHigherPositionFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.4
      }
    },
    {
	    /* Influence Factor Weight to prefer locations close to
	       optimal distance to other allies. */
      "k": "Float_PreferOptimalDistanceToAllyFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
	    /* When considering different kinds of attacks, multiply
	       the shooting damage by this value to decide which
	       attack to use. */
      "k": "Float_ShootingDamageMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 2.0
      }
    },
    {
	    /* When considering different kinds of attacks, multiply
	       the melee damage by this value to decide which attack
	       to use. */
      "k": "Float_MeleeDamageMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 0.75
      }
    },
    {
	    /* When considering different kinds of attacks, multiply
	       the DFA damage by this value to decide which attack to
	       use. */
      "k": "Float_DFADamageMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 2.0
      }
    },
    {
	    /* Influence Factor Weight to control the desire to be
	       inside e.g. forests. */
      "k": "Float_PreferLessTargetableLocationFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.6
      }
    },
    {
	    /* If a target is a melee revenge target, what additional
	       damage multiplier to apply. The total multiplier is
	       Float_MeleeDamageMultiplier +
	       FloatMeleeRevengeBonus. */
      "k": "Float_MeleeRevengeBonus",
      "v": {
        "type": "Float",
        "floatVal": 0.0
      }
    },
    {
	    /* A weight for an influence factor to prefer to get
	       inside melee range. Negative values will encourage
	       units to get out of melee range. */
      "k": "Float_PreferInsideMeleeRangeFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -1.5
      }
    },
    {
	    /* How many damage points one unit of unsteadiness
	       converts to when calculating virtual damage when
	       attacking unstable targets. */
      "k": "Float_UnsteadinessToVirtualDamageConversionRatio",
      "v": {
        "type": "Float",
        "floatVal": 2.5
      }
    },
    {
	    /* Influence Factor Weight to control the desire to be
	       inside forests or other locations that grant guard. */
      "k": "Float_PreferLocationsThatGrantGuardFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 1.5
      }
    },
    {
	    /* Percentage (0-100) of best available move that will be
	       accepted for bulwark skill moves. */
      "k": "Float_BulwarkThresholdPercentage",
      "v": {
        "type": "Float",
        "floatVal": 0.0
      }
    },
    {
	    /* Appetitive Influence Factor Weight to approach
	       hostile's rear arc. */
      "k": "Float_AppetitivePreferApproachingRearArcOfHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.2
      }
    },
    {
	    /* Appetitive Influence Factor Weight to approach
	       hostile's rear arc WHEN SPRINTING. */
      "k": "Float_SprintAppetitivePreferApproachingRearArcOfHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.4
      }
    },
    {
	    /* Influence Factor to prefer this lance to surround
	       hostile units WHEN SPRINTING.*/
      "k": "Float_SprintPreferSurroundingHostileUnitsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
	    /* Weight for an influence factor that seeks to stay
	       within a circular fence from the centerpoint of the
	       lance. Note - negative logic; this should use negative
	       numbers, as it's designed to discourage being outside
	       the radius and have no effect inside the fence. */
      "k": "Float_PreferStayInsideFenceNegativeLogicFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -4.0
      }
    },
    {
	    /* Weight for an influence factor that seeks to stay
	       within a circular fence from the centerpoint of the
	       lance WHEN SPRINTING. Note - negative logic; this
	       should use negative numbers, as it's designed to
	       discourage being outside the radius and have no effect
	       inside the fence. */
      "k": "Float_SprintPreferStayInsideFenceNegativeLogicFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.5
      }
    },
    {
	    /* Fence radius (in meters) for
	     * PreferStayInsideFenceFactor. */
      "k": "Float_FenceRadius",
      "v": {
        "type": "Float",
        "floatVal": 168
      }
    },
    {
	    /* Weight for an influence factor that seeks to maximize
	     * ranged defense bonus (e.g. mineral fields). */
      "k": "Float_PreferHigherRangedDefenseBonusLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.0
      }
    },
    {
	    /* When a buddy is exposed to enemy fire alone, apply this
	     * weight to locations that DO NOT have line of fire to
	     * hostiles. Probably negative. */
      "k": "Float_BuddyAloneFiringSolutionPreferenceWeight",
      "v": {
        "type": "Float",
        "floatVal": -1.0
      }
    },
    {
	    /* When a buddy is exposed to enemy fire alone, apply this
	     * weight to locations that DO NOT have line of fire to
	     * hostiles WHEN SPRINTING. Probably negative. */
      "k": "Float_SprintBuddyAloneFiringSolutionPreferenceWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.2
      }
    },
    {
	    /* When a buddy is exposed to enemy fire alone, close the
	     * distance to the alone unit by applying this weight
	     * proportionately to locations radiating out from the
	     * alone unit (e.g. the alone unit's location would get
	     * 0.0, this unit's location would get 1.0 * this
	     * weight. Probably negative. */
      "k": "Float_BuddyAloneMoveNearbyPreferenceWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.6
      }
    },
    {
	    /* When a buddy is exposed to enemy fire alone, close the
	     * distance to the alone unit by applying this weight
	     * proportionately to locations radiating out from the
	     * alone unit (e.g. the alone unit's location would get
	     * 0.0, this unit's location would get 1.0 * this
	     * weight WHEN SPRINTING. Probably negative. */
      "k": "Float_SprintBuddyAloneMoveNearbyPreferenceWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.4
      }
    },
    {
	    /* Influence Factor Weight for standing still when hostiles are in melee range. */
      "k": "Float_PreferStationaryWhenHostilesInMeleeRangeFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -1.0
      }
    },
    {
	    /* Influence Factor Weight to prefer being behind
	       hostiles.
	       Hostile Factor: 1.0 / 0.5 / 0.25 based on threat */
      "k": "Float_PreferAttackFromBehindHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.2
      }
    },
    {
	    /* Influence Factor Weight to prefer being behind hostiles
	       WHEN SPRINTING.
	       Hostile Factor: 1.0 / 0.5 / 0.25 based on threat */
      "k": "Float_PreferAttackFrom90DegreesToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
	    /* Influence Factor Weight to prefer being beside hostiles
	       WHEN SPRINTING.
	       Hostile Factor: 1.0 / 0.5 / 0.25 based on threat */
      "k": "Float_SprintPreferAttackFrom90DegreesToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
	    /* Influence Factor Weight to reject being closer than the
	       minimum weapon range to hostiles.  */
      "k": "Float_PreferNoCloserThanMinDistToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.8
      }
    },
    {
	    /* Influence Factor Weight to reject being closer than the
	       minimum weapon range to hostiles WHEN SPRINTING.  */
      "k": "Float_SprintPreferNoCloserThanMinDistToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.5
      }
    },
    {
	    /* Influence Factor Weight to prefer being behind braced
	       targets.
	       Hostile Factor: 1.0 / 0.5 / 0.25 based on threat */
      "k": "Float_PreferBeingBehindBracedHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
	    /* Influence Factor Weight to prefer being behind braced
	       targets WHEN SPRINTING.
	       Hostile Factor: 1.0 / 0.5 / 0.25 based on threat */
      "k": "Float_SprintPreferBeingBehindBracedHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
	    /* Influence Factor Weight to prefer being far away from
	       closest hostile. Useful for defensive moves. */
      "k": "Float_PreferHigherDistanceFromClosestHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.5
      }
    },
    {
	    /* Influence Factor Weight to prefer being far away WHEN
	       SPRINTING from closest hostile. Useful for defensive
	       moves. */
      "k": "Float_SprintPreferHigherDistanceFromClosestHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.8
      }
    },
    {
	    /* Influence Factor Weight to prefer having LOS to
	       fewest hostiles. Useful for defensive moves. */
      "k": "Float_PreferLOSToFewestHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.5
      }
    },
    {
	    /* Influence Factor Weight to prefer having LOS to fewest
	       hostiles WHEN SPRINTING. Useful for defensive moves. */
      "k": "Float_SprintPreferLOSToFewestHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.8
      }
    },
    {
	    /* Influence Factor Weight to prefer having LOS to most
		   hostiles. */
      "k": "Float_PreferLOSToMostHostilesFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.0
      }
    },
    {
	    /* Influence Factor Weight to prefer having LOS to most
	  	   hostiles WHEN SPRINTING. */
      "k": "Float_SprintPreferLOSToMostHostilesFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.0
      }
    },
    {
        /* Weight for an influence factor that seeks to minimize
         * ranged to hit penalties (e.g. mineral fields). */
      "k": "Float_PreferLowerRangedToHitPenaltyLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 1.0
      }
    }
  ]
}
