{
  "behaviorVariables": [
     {
      /* Influence Factor Weight for preferring higher
         elevations. */
      "k": "Float_PreferHigherPositionFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.25
      }
    },
    {
      /* Optimal distance to nearest hostile. (See
         Float_PreferOptimalDistanceToHostileFactorWeight.) */
      "k": "Float_OptimalHostileDistance",
      "v": {
        "type": "Float",
        "floatVal": 264
      }
    },
    {
      /* Influence Factor Weight to prefer locations close to
         optimal distance to other allies. */
      "k": "Float_PreferOptimalDistanceToAllyFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* When considering different kinds of attacks, multiply
         the DFA damage by this value to decide which attack to
         use. */
      "k": "Float_DFADamageMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 2.75
      }
    },
    {
      /* Influence Factor Weight to control the desire to be
         inside water. */
      "k": "Float_PreferHigherHeatSinkLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.3
      }
    },
    {
      /* A weight for an influence factor to prefer to get
         inside melee range. Negative values will encourage
         units to get out of melee range. */
      "k": "Float_PreferInsideMeleeRangeFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.8
      }
    },
    {
      /* If unsteady, the chance of just deciding to switch to
         defensive. */
      "k": "Float_UnsteadyCausesDefensiveMovePercentage",
      "v": {
        "type": "Float",
        "floatVal": 35
      }
    },
    {
      /* Appetitive Influence Factor Weight to approach ideal
         weapon range to hostile. */
      "k": "Float_AppetitivePreferIdealWeaponRangeToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 1
      }
    },
    {
      /* Appetitive Influence Factor Weight to approach ideal
         weapon range to hostile WHEN SPRINTING. */
      "k": "Float_SprintAppetitivePreferIdealWeaponRangeToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.9
      }
    },
    {
      /* Weight for an influence factor that seeks to stay
         within a circular fence from the centerpoint of the
         lance. Note - negative logic; this should use negative
         numbers, as it's designed to discourage being outside
         the radius and have no effect inside the fence. */
      "k": "Float_PreferStayInsideFenceNegativeLogicFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -2.25
      }
    },
    {
      /* Description: Number of points of damage that a sensor
         locking turn needs to do over a straight up shooting
         turn before deciding to sensor lock. Positive is a
         shooting bias, negative is a sensor lock bias.*/
      "k": "Float_MinimumSensorLockQuality",
      "v": {
        "type": "Float",
        "floatVal": 60
      }
    },
    {
      /* Multiplier applied when considering the value of a
         downed mech when calculating the centerpoint of the
         lance fence. 1.0 would be no special consideration, 2.0
         would make a downed mech as important as two other
         units. Values less than one would give the lance a
         tendency to abandon their wounded. */
      "k": "Float_DownedMechFenceContributionMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 1.25
      }
    },
    {
      /* When a buddy is exposed to enemy fire alone, apply this
         weight to locations that DO NOT have line of fire to
         hostiles. Probably negative. */
      "k": "Float_BuddyAloneFiringSolutionPreferenceWeight",
      "v": {
        "type": "Float",
        "floatVal": -1.5
      }
    },
    {
      /* When a buddy is exposed to enemy fire alone, apply this
         weight to locations that DO NOT have line of fire to
         hostiles WHEN SPRINTING. Probably negative. */
      "k": "Float_SprintBuddyAloneFiringSolutionPreferenceWeight",
      "v": {
        "type": "Float",
        "floatVal": -1.3
      }
    },
    {
      /* When a buddy is exposed to enemy fire alone, close the
         distance to the alone unit by applying this weight
         proportionately to locations radiating out from the
         alone unit (e.g. the alone unit's location would get
         0.0, this unit's location would get 1.0 * this
         weight. Probably negative. */
      "k": "Float_BuddyAloneMoveNearbyPreferenceWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.4
      }
    },
    {
      /* When a buddy is exposed to enemy fire alone, close the
         distance to the alone unit by applying this weight
         proportionately to locations radiating out from the
         alone unit (e.g. the alone unit's location would get
         0.0, this unit's location would get 1.0 * this
         weight WHEN SPRINTING. Probably negative. */
      "k": "Float_SprintBuddyAloneMoveNearbyPreferenceWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.5
      }
    },
    {
      /* Influence Factor Weight for standing still when hostiles are in melee range. */
      "k": "Float_PreferStationaryWhenHostilesInMeleeRangeFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -1.5
      }
    },
    {
      /* Influence Factor Weight to reject being closer than the
         minimum weapon range to hostiles.  */
      "k": "Float_PreferNoCloserThanMinDistToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.7
      }
    },
    {
      /* Influence Factor Weight to reject being closer than the
         minimum weapon range to hostiles WHEN SPRINTING.  */
      "k": "Float_SprintPreferNoCloserThanMinDistToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.5
      }
    },
    {
      /* Influence Factor Weight to prefer being far away from
         closest hostile. Useful for defensive moves. */
      "k" : "Float_PreferHigherDistanceFromClosestHostileFactorWeight",
      "v" : {
        "type" : "Float",
        "floatVal" : 0.5
      }
	},
    {
      /* Influence Factor Weight to prefer having LOS to
         fewest hostiles. Useful for defensive moves. */
      "k": "Float_PreferLOSToFewestHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.2
      }
    },
    {
      /* Influence Factor Weight to prefer having LOS to fewest
         hostiles WHEN SPRINTING. Useful for defensive moves. */
      "k": "Float_SprintPreferLOSToFewestHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* Influence Factor Weight to prefer having LOS to most
         hostiles. */
      "k": "Float_PreferLOSToMostHostilesFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* Influence Factor Weight to prefer having LOS to most
         hostiles WHEN SPRINTING. */
      "k": "Float_SprintPreferLOSToMostHostilesFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* Weight for an influence factor that seeks to minimize
           ranged to hit penalties (e.g. mineral fields). */
      "k" : "Float_PreferLowerRangedToHitPenaltyLocationsFactorWeight",
      "v" : {
        "type" : "Float",
        "floatVal" : 0.2
      }
    }
  ]
}