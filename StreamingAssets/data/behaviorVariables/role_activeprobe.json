{
  "behaviorVariables": [
    {
      /* Influence Factor Weight for preferring moving less. */
      "k": "Float_PreferLowerMovementFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.8
      }
    },
    {
      /* Influence Factor Weight for preferring higher
         elevations. */
      "k": "Float_PreferHigherPositionFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* Influence Factor Weight to maximize expected damage to
         hostiles.
         Hostile Factor: 1.0 / 0.5 / 0.25 based on threat */
      "k": "Float_PreferHigherExpectedDamageToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.5
      }
    },
    {
      /* Optimal distance to nearest hostile. (See
         Float_PreferOptimalDistanceToHostileFactorWeight.) */
      "k": "Float_OptimalHostileDistance",
      "v": {
        "type": "Float",
        "floatVal": 220
      }
    },
    {
      /* Influence Factor Weight to prefer locations close to
         optimal distance to other hostiles. */
      "k": "Float_PreferOptimalDistanceToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 1.5
      }
    },
    {
      /* When considering different kinds of attacks, multiply
         the melee damage by this value to decide which attack
         to use. */
      "k": "Float_MeleeDamageMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 0.5
      }
    },
    {
      /* Influence Factor Weight to control the desire to be
         inside e.g. forests. */
      "k": "Float_PreferLessTargetableLocationFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.4
      }
    },
    {
      /* Influence Factor Weight to control the desire to be
         inside e.g. forests WHEN SPRINTING. */
      "k": "Float_SprintPreferLessTargetableLocationFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.4
      }
    },
    {
      /* Influence Factor Weight to control the desire to be
         inside water. */
      "k": "Float_PreferHigherHeatSinkLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* Influence Factor Weight to control the desire to be
         inside water WHEN SPRINTING. */
      "k": "Float_SprintPreferHigherHeatSinkLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* Influence Factor Weight to control the desire to be in
         locations with movement bonus. */
      "k": "Float_PreferHigherMovementBonusLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.2
      }
    },
    {
      /* Influence Factor Weight to control the desire to be in
         locations with movement bonus WHEN SPRINTING. */
      "k": "Float_SprintPreferHigherMovementBonusLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.15
      }
    },
    {
      /* Influence Factor Weight to control the desire to attack
         a hostile's weak armor. */
      "k": "Float_PreferAttackingLowerArmorHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* If a target is a melee revenge target, what additional
         damage multiplier to apply. The total multiplier is
         Float_MeleeDamageMultiplier +
         FloatMeleeRevengeBonus. */
      "k": "Float_MeleeRevengeBonus",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    },
    {
      /* A weight for an influence factor to prefer to get
         inside melee range. Negative values will encourage
         units to get out of melee range. */
      "k": "Float_PreferInsideMeleeRangeFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.6
      }
    },
    {
      /* Influence Factor Weight to control the desire to be
         inside forests or other locations that grant guard. */
      "k": "Float_PreferLocationsThatGrantGuardFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.8
      }
    },
    {
      /* Influence Factor Weight to control the desire to be
         inside forests or other locations that grant guard WHEN
         SPRINTING. */
      "k": "Float_SprintPreferLocationsThatGrantGuardFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.55
      }
    },
    {
      /* Appetitive Influence Factor Weight to approach ideal
         weapon range to hostile. */
      "k": "Float_AppetitivePreferIdealWeaponRangeToHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.15
      }
    },
    {
      /* Influence Factor to prefer this lance to surround hostile units.*/
      "k": "Float_PreferSurroundingHostileUnitsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.2
      }
    },
    {
      /* Influence Factor to prefer this lance to surround
         hostile units WHEN SPRINTING.*/
      "k": "Float_SprintPreferSurroundingHostileUnitsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* Influence Factor to prefer not to be surrounded by hostile units.*/
      "k": "Float_PreferNotSurroundedByHostileUnitsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* Influence Factor to prefer not to be surrounded by
         hostile units WHEN SPRINTING.*/
      "k": "Float_SprintPreferNotSurroundedByHostileUnitsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* Weight for an influence factor that seeks to stay
         within a circular fence from the centerpoint of the
         lance. Note - negative logic; this should use negative
         numbers, as it's designed to discourage being outside
         the radius and have no effect inside the fence. */
      "k": "Float_PreferStayInsideFenceNegativeLogicFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -1
      }
    },
    {
      /* Description: Number of points of damage that a sensor
         locking turn needs to do over a straight up shooting
         turn before deciding to sensor lock. Positive is a
         shooting bias, negative is a sensor lock bias.*/
      "k": "Float_MinimumSensorLockQuality",
      "v": {
        "type": "Float",
        "floatVal": 45
      }
    },
    {
      /* Weight for an influence factor that seeks to maximize
         ranged defense bonus (e.g. mineral fields). */
      "k": "Float_PreferHigherRangedDefenseBonusLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.25
      }
    },
    {
      /* Weight for an influence factor that seeks to maximize
	     ranged defense bonus (e.g. mineral fields) WHEN SPRINTING. */
      "k": "Float_SprintPreferHigherRangedDefenseBonusLocationsFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.2
      }
    },
    {
      /* Multiplier applied when considering the value of a
         downed mech when calculating the centerpoint of the
         lance fence. 1.0 would be no special consideration, 2.0
         would make a downed mech as important as two other
         units. Values less than one would give the lance a
         tendency to abandon their wounded. */
      "k": "Float_DownedMechFenceContributionMultiplier",
      "v": {
        "type": "Float",
        "floatVal": 1
      }
    },
    {
      /* Weight for how much to prefer to be exposed to enemy
         fire alone. Probably negative. */
      "k": "Float_AlonePreferenceWeight",
      "v": {
        "type": "Float",
        "floatVal": -0.5
      }
    },
    {
      /* Weight for an influence factor that seeks to stay
         within range of hostile ECM fields to use Active Probe */
      "k": "Float_PreferActiveProbePositions",
      "v": {
        "type": "Float",
        "floatVal": 1
      }
    },
    {
      /* Weight for an influence factor that seeks to stay
         within range of hostile ECM fields to use Active Probe */
      "k": "Float_SprintPreferActiveProbePositions",
      "v": {
        "type": "Float",
        "floatVal": 0.2
      }
    },
    {
      /* Number of active probe targets before we even try to activate 
         active probe */
      "k": "Int_MinimumActiveProbeCount",
      "v": {
        "type": "Int",
        "IntVal": "2"
      }
    },
    {
      /* Minimum number of stealth pips to allow for an ECM
         ghosted mech to fire weapons */
      "k": "Int_MinimumECMGhostedPipsToFire",
      "v": {
        "type": "Int",
        "IntVal": "2"
      }
    },
    {
      /* Influence Factor Weight for standing still when hostiles are in melee range. */
      "k": "Float_PreferStationaryWhenHostilesInMeleeRangeFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": -1.5
      }
    },
    {
      /* Influence Factor Weight to prefer having LOS to fewest
         hostiles WHEN SPRINTING. Useful for defensive moves. */
      "k": "Float_SprintPreferLOSToFewestHostileFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* Influence Factor Weight to prefer having LOS to most
         hostiles. */
      "k": "Float_PreferLOSToMostHostilesFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0.1
      }
    },
    {
      /* Influence Factor Weight to prefer having LOS to most
         hostiles WHEN SPRINTING. */
      "k": "Float_SprintPreferLOSToMostHostilesFactorWeight",
      "v": {
        "type": "Float",
        "floatVal": 0
      }
    }
  ]
}
